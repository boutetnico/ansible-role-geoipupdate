---
- name: Ensure dependencies are installed
  apt:
    name: "{{ geoipupdate_dependencies }}"
    state: present
    update_cache: true

- name: Download geoipupdate tarball
  get_url:
    dest: /tmp
    mode: 0640
    url: https://github.com/maxmind/geoipupdate/releases/download/v{{ geoipupdate_version }}/geoipupdate_{{ geoipupdate_version }}_linux_{{ geoipupdate_arch }}.tar.gz

- name: Unarchive geoipupdate tarball
  unarchive:
    copy: false
    dest: /tmp
    mode: 0750
    src: /tmp/geoipupdate_{{ geoipupdate_version }}_linux_{{ geoipupdate_arch }}.tar.gz

- name: Copy geoipupdate binary to its install path
  copy:
    dest: "{{ geoipupdate_path }}"
    group: root
    mode: 0755
    owner: root
    src: /tmp/geoipupdate_{{ geoipupdate_version }}_linux_{{ geoipupdate_arch }}/geoipupdate

- name: Delete temporary archive and folder
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/geoipupdate_{{ geoipupdate_version }}_linux_{{ geoipupdate_arch }}
    - /tmp/geoipupdate_{{ geoipupdate_version }}_linux_{{ geoipupdate_arch }}.tar.gz

- name: Ensure database directory exists
  file:
    group: root
    mode: 0755
    name: "{{ geoipupdate_database_directory }}"
    owner: root
    state: directory

- name: Install geoipupdate config file
  template:
    dest: "{{ geoipupdate_config_file }}"
    group: root
    mode: 0640
    owner: root
    src: GeoIP.conf.j2
  notify: run geoipupdate

- name: Install geoipupdate cron job
  cron:
    cron_file: geoipupdate
    day: "{{ geoipupdate_cron_day | d(omit) }}"
    hour: "{{ geoipupdate_cron_hour | d(omit) }}"
    job: "geoipupdate -f {{ geoipupdate_config_file }}"
    minute: "{{ geoipupdate_cron_minute | d(omit) }}"
    month: "{{ geoipupdate_cron_month | d(omit) }}"
    name: "Update GeoIP databases"
    special_time: "{{ geoipupdate_cron_special_time | d(omit) }}"
    state: "{{ geoipupdate_cron_state }}"
    user: "{{ geoipupdate_cron_user }}"
    weekday: "{{ geoipupdate_cron_weekday | d(omit) }}"
